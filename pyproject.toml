[project]
name = "tokkit" # Required
dynamic = ["version"]
description = "This is description"
readme = "readme.md"
requires-python = ">=3.10"
license = { file = "LICENSE" }
keywords = ["tokkit"] # Optional
authors = [
    {name = "Nishant Baheti", email =  "nishantbaheti.it19@gmail.com"},
]

classifiers = [
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Build Tools",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3 :: Only",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
]

dependencies = [
    "Cython==3.0.12"
]

[project.optional-dependencies] # Optional
dev = [
    "tokkit",
    "pylint==3.0.3",
    "pip-tools==7.3.0",
    "black==25.1.0"
]

test = [
    "tokkit[dev]"
]

# List URLs that are relevant to your project
[project.urls] # Optional
"Homepage" = "https://github.com/nishantbaheti/tokkit"
"Bug Reports" = "https://github.com/nishantbaheti/tokkit/issues"
"Source" = "https://github.com/nishantbaheti/tokkit/"

[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8", "wheel", "Cython", "cibuildwheel", "delocate"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
# For smarter version schemes and other configuration options,
# check out https://github.com/pypa/setuptools_scm
# version_scheme = "no-guess-dev"

[tool.setuptools.packages.find]
where = ["src"]

[tool.cibuildwheel]
build = "*"
skip = ""
test-skip = ""
free-threaded-support = false
enable = []

archs = ["auto"]
build-frontend = "default"
config-settings = {}
dependency-versions = "pinned"
environment = {}
environment-pass = []
build-verbosity = 0

before-all = ""
before-build = ""
repair-wheel-command = ""

test-command = ""
before-test = ""
test-requires = []
test-extras = []
test-groups = []

container-engine = "docker"

manylinux-x86_64-image = "manylinux2014"
manylinux-i686-image = "manylinux2014"
manylinux-aarch64-image = "manylinux2014"
manylinux-ppc64le-image = "manylinux2014"
manylinux-s390x-image = "manylinux2014"
manylinux-armv7l-image = "manylinux_2_31"
manylinux-pypy_x86_64-image = "manylinux2014"
manylinux-pypy_i686-image = "manylinux2014"
manylinux-pypy_aarch64-image = "manylinux2014"

musllinux-x86_64-image = "musllinux_1_2"
musllinux-i686-image = "musllinux_1_2"
musllinux-aarch64-image = "musllinux_1_2"
musllinux-ppc64le-image = "musllinux_1_2"
musllinux-s390x-image = "musllinux_1_2"
musllinux-armv7l-image = "musllinux_1_2"


[tool.cibuildwheel.linux]
repair-wheel-command = "auditwheel repair -w {dest_dir} {wheel}"

[tool.cibuildwheel.macos]
archs = ["arm64", "universal2"] 
repair-wheel-command = "delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}"
environment = {
    LDFLAGS = ""
}

[tool.cibuildwheel.windows]

[tool.cibuildwheel.pyodide]